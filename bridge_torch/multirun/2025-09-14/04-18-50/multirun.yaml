hydra:
  run:
    dir: .
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - bridgedata=lift_carrot_mixed,pull_pot_100,pull_pot_mixed,put_carrot_in_pot_100
    - data_path=/data3/vla-reasoning/dataset/bdv2_numpy
    - save_dir=/data3/vla-reasoning/torch_runs/bridgedata_torch_test
    - algo=bc
    - algo.encoder=resnet101
    - algo.model.use_proprio=true
    - algo.data.obs_horizon=2
    - saliency.enabled=false
    - saliency.weight=0
    - saliency.alpha=0
    - batch_size=20
    - num_steps=10
    - eval_interval=10
    - save_interval=10
    - log_interval=1
  job:
    name: train_hydra
    chdir: false
    override_dirname: algo.data.obs_horizon=2,algo.encoder=resnet101,algo.model.use_proprio=true,algo=bc,batch_size=20,bridgedata=lift_carrot_mixed,pull_pot_100,pull_pot_mixed,put_carrot_in_pot_100,data_path=/data3/vla-reasoning/dataset/bdv2_numpy,eval_interval=10,log_interval=1,num_steps=10,saliency.alpha=0,saliency.enabled=false,saliency.weight=0,save_dir=/data3/vla-reasoning/torch_runs/bridgedata_torch_test,save_interval=10
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/vla-reasoning/proj/vlm-gabril/GABRIL-CARLA/bridge_torch
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/vla-reasoning/proj/vlm-gabril/GABRIL-CARLA/bridge_torch/conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      bridgedata: lift_carrot_100
      algo: bc
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
algo:
  model:
    hidden_dims:
    - 256
    - 256
    - 256
    dropout_rate: 0.1
    tanh_squash_distribution: false
    state_dependent_std: false
    fixed_std:
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    - 1
    use_proprio: true
  optimizer:
    lr: 0.0003
    weight_decay: 0.0
  scheduler:
    type: warmup_cosine
    warmup_steps: 2000
  data:
    goal_relabeling_strategy: uniform
    goal_relabeling_kwargs:
      reached_proportion: 0.0
    relabel_actions: true
    augment: true
    obs_horizon: 2
    act_pred_horizon: 1
    saliency_alpha: ${saliency.alpha}
    shuffle_buffer_size: 25000
    augment_next_obs_goal_differently: false
    augment_kwargs:
      p: 0.5
      random_resized_crop:
        scale:
        - 0.8
        - 1.0
        ratio:
        - 0.9
        - 1.1
      random_brightness:
      - 0.2
      random_contrast:
      - 0.8
      - 1.2
      random_saturation:
      - 0.8
      - 1.2
      random_hue:
      - 0.1
      augment_order:
      - random_resized_crop
      - random_brightness
      - random_contrast
      - random_saturation
      - random_hue
  encoder: resnet101
bridgedata:
  action_proprio_metadata:
    action:
      mean:
      - 0.00019296819
      - 0.00013667766
      - -0.00014583133
      - -0.00018390431
      - -0.00030808983
      - 0.0002742527
      - 0.59716219
      std:
      - 0.00912848
      - 0.0127196
      - 0.01229497
      - 0.02606696
      - 0.02875283
      - 0.07807977
      - 0.48710242
      min:
      - 0.00019296819
      - 0.00013667766
      - -0.00014583133
      - -0.00018390431
      - -0.00030808983
      - 0.0002742527
      - 0.59716219
      max:
      - 0.00912848
      - 0.0127196
      - 0.01229497
      - 0.02606696
      - 0.02875283
      - 0.07807977
      - 0.48710242
    proprio:
      mean:
      - 0.00019296819
      - 0.00013667766
      - -0.00014583133
      - -0.00018390431
      - -0.00030808983
      - 0.0002742527
      - 0.59716219
      std:
      - 0.00912848
      - 0.0127196
      - 0.01229497
      - 0.02606696
      - 0.02875283
      - 0.07807977
      - 0.48710242
      min:
      - 0.00019296819
      - 0.00013667766
      - -0.00014583133
      - -0.00018390431
      - -0.00030808983
      - 0.0002742527
      - 0.59716219
      max:
      - 0.00912848
      - 0.0127196
      - 0.01229497
      - 0.02606696
      - 0.02875283
      - 0.07807977
      - 0.48710242
  task_name: lift_carrot_100
  include:
  - - lift_carrot_100
  exclude: []
  sample_weights: null
saliency:
  enabled: false
  weight: 0
  beta: 1.0
  alpha: 0
name: ''
debug: false
data_path: /data3/vla-reasoning/dataset/bdv2_numpy
save_dir: /data3/vla-reasoning/torch_runs/bridgedata_torch_test
batch_size: 20
val_batch_size: 200
num_steps: 10
log_interval: 1
eval_interval: 10
eval_batches: 0
save_interval: 10
seed: 42
device: cuda
ddp:
  enabled: true
  find_unused_parameters: false
amp:
  enabled: true
  dtype: bf16
  growth_factor: 2.0
  backoff_factor: 0.5
  growth_interval: 2000
compile:
  enabled: true
  kwargs:
    mode: default
    dynamic: false
    fullgraph: false
dataloader:
  num_workers: 8
  prefetch_factor: 2
  persistent_workers: true
  pin_memory: true
scheduler:
  type: warmup_cosine
  decay_steps: ${num_steps}
wandb:
  project: bridgedata_torch
  enabled: true
